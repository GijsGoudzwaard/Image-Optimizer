# This is the same ID that you've used in meson.build and other files
app-id: com.github.gijsgoudzwaard.image-optimizer

# Instead of manually specifying a long list of build and runtime dependencies,
# we can use a convenient pre-made runtime and SDK. For this example, we'll be
# using the runtime and SDK provided by elementary.
runtime: io.elementary.Platform
runtime-version: '6'
sdk: io.elementary.Sdk

# This should match the exec line in your .desktop file and usually is the same
# as your app ID
command: com.github.gijsgoudzwaard.image-optimizer

# Here we can specify the kinds of permissions our app needs to run. Since we're
# not using hardware like webcams, making sound, or reading external files, we
# only need permission to draw our app on screen using either X11 or Wayland.
finish-args:
  - '--share=ipc'
  - '--socket=x11'
  - '--socket=wayland'
  - '--filesystem=home'

# This section is where you list all the source code required to build your app.
# If we had external dependencies that weren't included in our SDK, we would list
# them here.
modules:
  - name: jpegoptim
    sources:
      - type: archive
        url: https://github.com/tjko/jpegoptim/archive/RELEASE.1.4.6.tar.gz
        sha256: c44dcfac0a113c3bec13d0fc60faf57a0f9a31f88473ccad33ecdf210b4c0c52
  - name: optipng
    build-options:
      config-opts:
      - --with-system-libs
    sources:
      - type: archive
        url: https://netcologne.dl.sourceforge.net/project/optipng/OptiPNG/optipng-0.7.7/optipng-0.7.7.tar.gz
        sha256: 4f32f233cef870b3f95d3ad6428bfe4224ef34908f1b42b0badf858216654452
  - name: image-optimizer
    buildsystem: meson
    sources:
      - type: dir
        path: .
